diff --git a/org.adempiere.ui.zk/WEB-INF/src/org/adempiere/webui/panel/BroadcastMessageWindow.java b/org.adempiere.ui.zk/WEB-INF/src/org/adempiere/webui/panel/BroadcastMessageWindow.java
index 265886ad6..910ba8065 100644
--- a/org.adempiere.ui.zk/WEB-INF/src/org/adempiere/webui/panel/BroadcastMessageWindow.java
+++ b/org.adempiere.ui.zk/WEB-INF/src/org/adempiere/webui/panel/BroadcastMessageWindow.java
@@ -21,6 +21,7 @@ import java.util.logging.Level;
 
 import org.adempiere.exceptions.DBException;
 import org.adempiere.model.MBroadcastMessage;
+import org.adempiere.webui.ClientInfo;
 import org.adempiere.webui.apps.AEnv;
 import org.adempiere.webui.component.Button;
 import org.adempiere.webui.component.Checkbox;
@@ -73,7 +74,6 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 	private Html textMsgContent = null;
 	private North north =null;
 	private Div swDiv =null;
-	private Div sDiv = null;
 	private Button btnPrev = null;
 	private Button btnNext = null;
 	private Checkbox acknowledged = null;
@@ -82,9 +82,6 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 	private HeaderPanel pnlHead = null;
 	private boolean isTest = false;
 	private boolean initialised = false;
-	/*public BroadcastMessageWindow(){
-		//init();
-	}*/
 	
 	public BroadcastMessageWindow(HeaderPanel pnlHead) {
 		this.pnlHead = pnlHead;
@@ -100,14 +97,21 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 		this.appendChild(layout);
 		addEventListener("onFocus", this);
 		initialised = true;
-		
-		ZKUpdateUtil.setWidth(this, "30%");
-		ZKUpdateUtil.setHeight(this, "30%");
+
+		String percent;
+		if (ClientInfo.isMobile())
+			percent = "50%";
+		else
+			percent = "30%";
+		ZKUpdateUtil.setWidth(this, percent);
+		ZKUpdateUtil.setHeight(this, percent);
 		setPosition("right,bottom");
 		setBorder(true);
 		setShadow(false);
 		doOverlapped();
 		setClosable(true);
+		setSizable(true);
+		setMaximizable(true);
 		
 		north = new North();
 		layout.appendChild(north);
@@ -115,7 +119,6 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 		Center center = new Center();
 		layout.appendChild(center);
 		Div htmlDiv = new Div();
-		//textMsgContent = new Label();
 		htmlDiv.appendChild(textMsgContent);
 		center.setAutoscroll(true);
 		Env.setContext(Env.getCtx(), MBroadcastMessage.CLIENTINFO_BROADCAST_COMPONENT_ID, pnlHead.getUuid());
@@ -137,32 +140,19 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 		Hbox southHLayout = new Hbox();
 		south.appendChild(southHLayout);
 		southHLayout.setSpacing("30");
-		ZKUpdateUtil.setWidth(southHLayout, "350px");
+		ZKUpdateUtil.setHflex(southHLayout, "1");
 		
 		Cell leftCell = new Cell();
 		southHLayout.appendChild(leftCell);
 		ZKUpdateUtil.setHflex(leftCell, "1");
-		//leftCell.setWidth("30%");
-		leftCell.setAlign("left");
+		leftCell.setAlign("center");
 		swDiv = new Div();
 		swDiv.setParent(leftCell);
 		acknowledged = new Checkbox();
 		
-		Cell rightCell = new Cell();
-		southHLayout.appendChild(rightCell);
-		rightCell.setAlign("right");
-		ZKUpdateUtil.setHflex(rightCell, "true");
-		sDiv = new Div();
-		ZKUpdateUtil.setWidth(sDiv, "70px");
-		rightCell.appendChild(sDiv);
-		
-		
 			//createHashTable();
 			currMsg = 0;
-			//btnPrev = new Button("<");
 			btnPrev.addEventListener("onClick", this);
-			//textMsgNo = new Label();
-			//textMsgNo.setValue((currMsg+1)+"/"+noOfMsgs);
 			btnNext = new Button(">");
 			btnNext.addEventListener("onClick", this);
 			
@@ -179,9 +169,7 @@ public class BroadcastMessageWindow extends Window implements IBroadcastMsgPopup
 			swDiv.setVisible(false);
 		
 		ZKUpdateUtil.setHeight(south, "22%");
-		//south.setWidth("45%");
-		acknowledged.setParent(rightCell);
-		//ZKUpdateUtil.setHflex(acknowledged, "6");
+		acknowledged.setParent(leftCell);
 		acknowledged.setLabel(Msg.getMsg(Env.getCtx(),"Acknowledge"));
 		acknowledged.addEventListener("onClick", this);
 		
